{"ast":null,"code":"const fetchallUsers=async()=>{try{const response=await fetch(\"http://localhost:3001/api/Admin/getUsers\",{method:\"GET\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}});const json=await response.json();return json;}catch(err){return{messsage:err.message};}};const fetchEmailLogs=async()=>{try{const response=await fetch(\"http://localhost:3001/api/Admin/GetEmailLogs\",{method:\"GET\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}});const json=await response.json();return json;}catch(err){return{messsage:err.message};}};const fetchRequestList=async()=>{try{const response=await fetch(\"http://localhost:3001/api/User/GetRequestList\",{method:\"GET\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}});const json=await response.json();return json;}catch(err){return{messsage:err.message};}};const CreateUser=async(User,Methods)=>{try{const response=await fetch(\"http://localhost:3001/api/Admin/\"+Methods,{method:\"POST\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({name:User===null||User===void 0?void 0:User.name,email:User===null||User===void 0?void 0:User.email,Gender:User===null||User===void 0?void 0:User.gender,UserType:User===null||User===void 0?void 0:User.UserType,IsAccountLocked:User===null||User===void 0?void 0:User.IsAccountLocked,IsEmailVerified:User===null||User===void 0?void 0:User.IsEmailVerified,UserType:User===null||User===void 0?void 0:User.UserType,_id:User===null||User===void 0?void 0:User._id})});const json=await response.json();return json;}catch(error){console.error(error.message);}};const SendMailLog=async MailBody=>{try{const response=await fetch(\"http://localhost:3001/api/Admin/SendMail\",{method:\"POST\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({FromEmail:MailBody.FromEmail,ToEmail:MailBody.ToEmail,Subject:MailBody.Subject,Body:MailBody.Body,User:MailBody.UserId})});const json=await response.json();return json;}catch(error){console.error(error.message);}};module.exports={fetchallUsers,SendMailLog,CreateUser,fetchEmailLogs};","map":{"version":3,"names":["fetchallUsers","response","fetch","method","credentials","headers","json","err","messsage","message","fetchEmailLogs","fetchRequestList","CreateUser","User","Methods","body","JSON","stringify","name","email","Gender","gender","UserType","IsAccountLocked","IsEmailVerified","_id","error","console","SendMailLog","MailBody","FromEmail","ToEmail","Subject","Body","UserId","module","exports"],"sources":["/Users/vikashjoshi/noteflect-app/note-flect-app/frontend/src/components/admin/Manage/admin_methods.js"],"sourcesContent":["\nconst fetchallUsers=async()=>{\n    try {\n        const response = await fetch(`http://localhost:3001/api/Admin/getUsers`, {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: { \"Content-Type\": \"application/json\" }\n        });\n\n        const json = await response.json();\n        return json;\n      } catch (err) {\n    return   { messsage:err.message}\n    }\n}\n\n\nconst fetchEmailLogs=async()=>{\n  try {\n      const response = await fetch(`http://localhost:3001/api/Admin/GetEmailLogs`, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n\n      const json = await response.json();\n      return json;\n    } catch (err) {\n  return   { messsage:err.message}\n  }\n}\n\nconst fetchRequestList=async()=>{\n  try {\n      const response = await fetch(`http://localhost:3001/api/User/GetRequestList`, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n\n      const json = await response.json();\n      return json;\n    } catch (err) {\n  return   { messsage:err.message}\n  }\n}\n\n\n\nconst CreateUser=async(User,Methods)=>{\n  try {\n    const response = await fetch(\"http://localhost:3001/api/Admin/\"+Methods, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: User?.name,\n        email: User?.email,\n        Gender: User?.gender,\n        UserType: User?.UserType,\n        IsAccountLocked: User?.IsAccountLocked,\n        IsEmailVerified: User?.IsEmailVerified,\n        \n        UserType:User?.UserType,\n        _id: User?._id\n      })\n    });\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nconst SendMailLog =async(MailBody)=>{\n  try {\n    const response = await fetch(\"http://localhost:3001/api/Admin/SendMail\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        FromEmail:MailBody.FromEmail,\n        ToEmail:MailBody.ToEmail,\n        Subject:MailBody.Subject,\n        Body:MailBody.Body,\n        User:MailBody.UserId\n      })\n    });\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\n\nmodule.exports={fetchallUsers,SendMailLog,CreateUser,fetchEmailLogs}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}