{"ast":null,"code":"const SaveNotes = async Notes => {\n  try {\n    console.log(Notes);\n    const response = await fetch(\"http://localhost:3001/api/Notes/AddNote\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: Notes === null || Notes === void 0 ? void 0 : Notes.title,\n        catgory: Notes === null || Notes === void 0 ? void 0 : Notes.category,\n        content: Notes === null || Notes === void 0 ? void 0 : Notes.content,\n        Id: ''\n      })\n    });\n    if (!response.ok) {\n      throw new Error(response.message);\n    }\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n_c = SaveNotes;\nconst RemoveNote = async Notes => {\n  try {\n    console.log(Notes);\n    const response = await fetch(\"http://localhost:3001/api/Notes/RemoveNote\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        note: Notes === null || Notes === void 0 ? void 0 : Notes._id\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Something Went Wrong');\n    }\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    return {\n      messsage: error.message\n    };\n  }\n};\n_c2 = RemoveNote;\nconst FetchCategory = async () => {\n  try {\n    const response = await fetch(\"http://localhost:3001/api/Notes/GetAllCategory\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.status == \"400\") {\n      throw new Error(`Something Went Wrong ${response.message}`);\n    }\n    const json = await response.json();\n    return json;\n  } catch (err) {\n    return {\n      messsage: err.message\n    };\n  }\n};\n_c3 = FetchCategory;\nconst FetchAllNotes = async (Page = 1) => {\n  try {\n    const response = await fetch(`http://localhost:3001/api/Notes/GetAllNotesByUser?Page=${Page}`, {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.status == \"400\") {\n      throw new Error(`Something Went Wrong ${response.message}`);\n    }\n    const json = await response.json();\n    return json;\n  } catch (err) {\n    return {\n      messsage: err.message\n    };\n  }\n};\n_c4 = FetchAllNotes;\nconst FetchNotesByCategory = async (Note, Page = 1) => {\n  try {\n    const response = await fetch(`http://localhost:3001/api/Notes/GetAllNotesByCategory?Page=${Page}&category=${Note === null || Note === void 0 ? void 0 : Note.category}`, {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.status == \"400\") {\n      throw new Error(`0:Something Went Wrong ${response.message}`);\n    }\n    const json = await response.json();\n    return json;\n  } catch (err) {\n    return {\n      messsage: '0:' + err.message\n    };\n  }\n};\n_c5 = FetchNotesByCategory;\nmodule.exports = {\n  SaveNotes,\n  FetchCategory,\n  FetchNotesByCategory,\n  FetchAllNotes,\n  RemoveNote\n};\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SaveNotes\");\n$RefreshReg$(_c2, \"RemoveNote\");\n$RefreshReg$(_c3, \"FetchCategory\");\n$RefreshReg$(_c4, \"FetchAllNotes\");\n$RefreshReg$(_c5, \"FetchNotesByCategory\");","map":{"version":3,"names":["SaveNotes","Notes","console","log","response","fetch","method","credentials","headers","body","JSON","stringify","title","catgory","category","content","Id","ok","Error","message","json","error","_c","RemoveNote","note","_id","messsage","_c2","FetchCategory","status","err","_c3","FetchAllNotes","Page","_c4","FetchNotesByCategory","Note","_c5","module","exports","$RefreshReg$"],"sources":["/Users/vikashjoshi/noteflect-app/note-flect-app/frontend/src/components/Notes/notes_methods.js"],"sourcesContent":["const SaveNotes=async (Notes)=>{\n    try {\n        console.log(Notes)\n        const response = await fetch(\"http://localhost:3001/api/Notes/AddNote\", {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n            \n\n          },\n          body: JSON.stringify({\n            title:Notes?.title,\n            catgory:Notes?.category,\n            content:Notes?.content,\n            Id:''\n          })\n        });\n        if (!response.ok) {\n          throw new Error(response.message);\n        }\n        const json = await response.json();\n        return json;\n      } catch (error) {\n        console.error(error.message);\n      }\n\n\n}\n\nconst RemoveNote=async (Notes)=>{\n  try {\n      console.log(Notes)\n      const response = await fetch(\"http://localhost:3001/api/Notes/RemoveNote\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n       note:Notes?._id\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Something Went Wrong');\n      }\n      const json = await response.json();\n      return json;\n    } catch (error) {\n      return   { messsage:error.message}\n    }\n\n\n}\n\nconst FetchCategory=async()=>{\n    try {\n        const response = await fetch(\"http://localhost:3001/api/Notes/GetAllCategory\", {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: { \"Content-Type\": \"application/json\" }\n        });\n  \n        if (response.status == \"400\") {\n          throw new Error(`Something Went Wrong ${response.message}`);\n        }\n        const json = await response.json();\n        return json;\n      } catch (err) {\n    return   { messsage:err.message}\n    }\n}\n\nconst FetchAllNotes=async(Page=1)=>{\n    try {\n        const response = await fetch(`http://localhost:3001/api/Notes/GetAllNotesByUser?Page=${Page}`, {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: { \"Content-Type\": \"application/json\" }\n        });\n  \n        if (response.status == \"400\") {\n          throw new Error(`Something Went Wrong ${response.message}`);\n        }\n        const json = await response.json();\n        return json;\n      } catch (err) {\n    return   { messsage:err.message}\n    }\n}\n\n\nconst FetchNotesByCategory=async(Note,Page=1)=>{\n    try {\n        const response = await fetch(`http://localhost:3001/api/Notes/GetAllNotesByCategory?Page=${Page}&category=${Note?.category}`, {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: { \"Content-Type\": \"application/json\" },\n        });\n  \n        if (response.status == \"400\") {\n          throw new Error(`0:Something Went Wrong ${response.message}`);\n        }\n        const json = await response.json();\n        return json;\n      } catch (err) {\n    return   { messsage:'0:'+err.message}\n    }\n}\n\n  module.exports = { SaveNotes,FetchCategory,FetchNotesByCategory,FetchAllNotes,RemoveNote }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}