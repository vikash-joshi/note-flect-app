{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{Editor}from'@tinymce/tinymce-react';import{jsx as _jsx}from\"react/jsx-runtime\";const CustomTinyMCEEditor=_ref=>{let{onEditorChange}=_ref;const editorRef=useRef(null);useEffect(()=>{// Function to handle voice-to-text conversion\nconst handleVoiceToText=()=>{if('webkitSpeechRecognition'in window){const recognition=new window.webkitSpeechRecognition();recognition.continuous=false;recognition.interimResults=false;recognition.lang='en-US';recognition.onstart=()=>{console.log('Voice recognition started. Speak into the microphone.');};recognition.onresult=event=>{const transcript=event.results[0][0].transcript;if(editorRef.current){const editor=editorRef.current;editor.execCommand('mceInsertContent',false,transcript);onEditorChange(editor.getContent());}};recognition.onerror=event=>{console.error('Error occurred in recognition: '+event.error);};recognition.onend=()=>{console.log('Voice recognition ended.');};recognition.start();}else{console.error('Speech recognition not supported in this browser.');}};// Ensure the custom button is added when editor is initialized\nconst editor=editorRef.current;if(editor){editor.ui.registry.addButton('voiceToText',{text:'Voice to Text',onAction:handleVoiceToText});}},[onEditorChange]);return/*#__PURE__*/_jsx(Editor,{apiKey:\"yay93jx85q2oykpyxs92v2d6yeu3cfik1nofxz90nu5bv8u5\",onInit:(evt,editor)=>{editorRef.current=editor;editor.ui.registry.addButton('voiceToText',{text:'Voice to Text',onAction:()=>{if('webkitSpeechRecognition'in window){const recognition=new window.webkitSpeechRecognition();recognition.continuous=false;recognition.interimResults=false;recognition.lang='en-US';recognition.onstart=()=>{console.log('Voice recognition started. Speak into the microphone.');};recognition.onresult=event=>{const transcript=event.results[0][0].transcript;if(editorRef.current){const editor=editorRef.current;editor.execCommand('mceInsertContent',false,transcript);onEditorChange(editor.getContent());}};recognition.onerror=event=>{console.error('Error occurred in recognition: '+event.error);};recognition.onend=()=>{console.log('Voice recognition ended.');};recognition.start();}else{console.error('Speech recognition not supported in this browser.');}}});},initialValue:\"<p></p>\",init:{height:250,menubar:false,plugins:['advlist autolink lists link image charmap print preview anchor','searchreplace visualblocks code fullscreen','insertdatetime media table paste code help wordcount'],toolbar:'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | voiceToText',setup:editor=>{editor.on('Change',()=>{onEditorChange(editor.getContent());});}}});};export default CustomTinyMCEEditor;","map":{"version":3,"names":["React","useRef","useEffect","Editor","jsx","_jsx","CustomTinyMCEEditor","_ref","onEditorChange","editorRef","handleVoiceToText","window","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","console","log","onresult","event","transcript","results","current","editor","execCommand","getContent","onerror","error","onend","start","ui","registry","addButton","text","onAction","apiKey","onInit","evt","initialValue","init","height","menubar","plugins","toolbar","setup","on"],"sources":["/Users/vikashjoshi/noteflect-app/note-flect-app/frontend/src/components/common/controls/quill-editor/quill-editor.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\n\nconst CustomTinyMCEEditor = ({ onEditorChange }) => {\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    // Function to handle voice-to-text conversion\n    const handleVoiceToText = () => {\n      if ('webkitSpeechRecognition' in window) {\n        const recognition = new window.webkitSpeechRecognition();\n        recognition.continuous = false;\n        recognition.interimResults = false;\n        recognition.lang = 'en-US';\n\n        recognition.onstart = () => {\n          console.log('Voice recognition started. Speak into the microphone.');\n        };\n\n        recognition.onresult = (event) => {\n          const transcript = event.results[0][0].transcript;\n          if (editorRef.current) {\n            const editor = editorRef.current;\n            editor.execCommand('mceInsertContent', false, transcript);\n            onEditorChange(editor.getContent());\n          }\n        };\n\n        recognition.onerror = (event) => {\n          console.error('Error occurred in recognition: ' + event.error);\n        };\n\n        recognition.onend = () => {\n          console.log('Voice recognition ended.');\n        };\n\n        recognition.start();\n      } else {\n        console.error('Speech recognition not supported in this browser.');\n      }\n    };\n\n    // Ensure the custom button is added when editor is initialized\n    const editor = editorRef.current;\n    if (editor) {\n      editor.ui.registry.addButton('voiceToText', {\n        text: 'Voice to Text',\n        onAction: handleVoiceToText,\n      });\n    }\n  }, [onEditorChange]);\n\n  return (\n    <Editor\n      apiKey='yay93jx85q2oykpyxs92v2d6yeu3cfik1nofxz90nu5bv8u5'\n      onInit={(evt, editor) => {\n        editorRef.current = editor;\n        editor.ui.registry.addButton('voiceToText', {\n          text: 'Voice to Text',\n          onAction: () => {\n            if ('webkitSpeechRecognition' in window) {\n              const recognition = new window.webkitSpeechRecognition();\n              recognition.continuous = false;\n              recognition.interimResults = false;\n              recognition.lang = 'en-US';\n\n              recognition.onstart = () => {\n                console.log('Voice recognition started. Speak into the microphone.');\n              };\n\n              recognition.onresult = (event) => {\n                const transcript = event.results[0][0].transcript;\n                if (editorRef.current) {\n                  const editor = editorRef.current;\n                  editor.execCommand('mceInsertContent', false, transcript);\n                  onEditorChange(editor.getContent());\n                }\n              };\n\n              recognition.onerror = (event) => {\n                console.error('Error occurred in recognition: ' + event.error);\n              };\n\n              recognition.onend = () => {\n                console.log('Voice recognition ended.');\n              };\n\n              recognition.start();\n            } else {\n              console.error('Speech recognition not supported in this browser.');\n            }\n          },\n        });\n      }}\n      initialValue=\"<p></p>\"\n      init={{\n        height: 250,\n        menubar: false,\n        plugins: [\n          'advlist autolink lists link image charmap print preview anchor',\n          'searchreplace visualblocks code fullscreen',\n          'insertdatetime media table paste code help wordcount',\n        ],\n        toolbar:\n          'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | voiceToText',\n        setup: (editor) => {\n          editor.on('Change', () => {\n            onEditorChange(editor.getContent());\n          });\n        },\n      }}\n    />\n  );\n};\n\nexport default CustomTinyMCEEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}