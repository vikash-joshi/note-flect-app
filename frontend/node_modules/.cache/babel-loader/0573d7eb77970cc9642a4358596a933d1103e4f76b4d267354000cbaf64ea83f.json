{"ast":null,"code":"const SaveNotes=async Notes=>{try{console.log(Notes);const response=await fetch(\"http://localhost:3001/api/Notes/AddNote\",{method:\"POST\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({title:Notes===null||Notes===void 0?void 0:Notes.title,catgory:Notes===null||Notes===void 0?void 0:Notes.category,content:Notes===null||Notes===void 0?void 0:Notes.content,Id:''})});if(!response.ok){throw new Error(response.message);}const json=await response.json();return json;}catch(error){console.error(error.message);}};const RemoveNote=async Notes=>{try{console.log(Notes);const response=await fetch(\"http://localhost:3001/api/Notes/RemoveNote\",{method:\"POST\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({note:Notes===null||Notes===void 0?void 0:Notes._id})});if(!response.ok){throw new Error('Something Went Wrong');}const json=await response.json();return json;}catch(error){return{messsage:error.message};}};const FetchCategory=async()=>{try{const response=await fetch(\"http://localhost:3001/api/Notes/GetAllCategory\",{method:\"GET\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}});if(response.status==\"400\"){throw new Error(`Something Went Wrong ${response.message}`);}const json=await response.json();return json;}catch(err){return{messsage:err.message};}};const FetchAllNotes=async function(){let Page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;try{const response=await fetch(`http://localhost:3001/api/Notes/GetAllNotesByUser?Page=${Page}`,{method:\"GET\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}});if(response.status==\"400\"){throw new Error(`Something Went Wrong ${response.message}`);}const json=await response.json();return json;}catch(err){return{messsage:err.message};}};const FetchNotesByCategory=async function(Note){let Page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;try{const response=await fetch(`http://localhost:3001/api/Notes/GetAllNotesByCategory?Page=${Page}&category=${Note===null||Note===void 0?void 0:Note.category}`,{method:\"GET\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}});if(response.status==\"400\"){throw new Error(`0:Something Went Wrong ${response.message}`);}const json=await response.json();return json;}catch(err){return{messsage:'0:'+err.message};}};module.exports={SaveNotes,FetchCategory,FetchNotesByCategory,FetchAllNotes,RemoveNote};","map":{"version":3,"names":["SaveNotes","Notes","console","log","response","fetch","method","credentials","headers","body","JSON","stringify","title","catgory","category","content","Id","ok","Error","message","json","error","RemoveNote","note","_id","messsage","FetchCategory","status","err","FetchAllNotes","Page","arguments","length","undefined","FetchNotesByCategory","Note","module","exports"],"sources":["/Users/vikashjoshi/noteflect-app/note-flect-app/frontend/src/components/Notes/notes_methods.js"],"sourcesContent":["const SaveNotes=async (Notes)=>{\n    try {\n        console.log(Notes)\n        const response = await fetch(\"http://localhost:3001/api/Notes/AddNote\", {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n            \n\n          },\n          body: JSON.stringify({\n            title:Notes?.title,\n            catgory:Notes?.category,\n            content:Notes?.content,\n            Id:''\n          })\n        });\n        if (!response.ok) {\n          throw new Error(response.message);\n        }\n        const json = await response.json();\n        return json;\n      } catch (error) {\n        console.error(error.message);\n      }\n\n\n}\n\nconst RemoveNote=async (Notes)=>{\n  try {\n      console.log(Notes)\n      const response = await fetch(\"http://localhost:3001/api/Notes/RemoveNote\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n       note:Notes?._id\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Something Went Wrong');\n      }\n      const json = await response.json();\n      return json;\n    } catch (error) {\n      return   { messsage:error.message}\n    }\n\n\n}\n\nconst FetchCategory=async()=>{\n    try {\n        const response = await fetch(\"http://localhost:3001/api/Notes/GetAllCategory\", {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: { \"Content-Type\": \"application/json\" }\n        });\n  \n        if (response.status == \"400\") {\n          throw new Error(`Something Went Wrong ${response.message}`);\n        }\n        const json = await response.json();\n        return json;\n      } catch (err) {\n    return   { messsage:err.message}\n    }\n}\n\nconst FetchAllNotes=async(Page=1)=>{\n    try {\n        const response = await fetch(`http://localhost:3001/api/Notes/GetAllNotesByUser?Page=${Page}`, {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: { \"Content-Type\": \"application/json\" }\n        });\n  \n        if (response.status == \"400\") {\n          throw new Error(`Something Went Wrong ${response.message}`);\n        }\n        const json = await response.json();\n        return json;\n      } catch (err) {\n    return   { messsage:err.message}\n    }\n}\n\n\nconst FetchNotesByCategory=async(Note,Page=1)=>{\n    try {\n        const response = await fetch(`http://localhost:3001/api/Notes/GetAllNotesByCategory?Page=${Page}&category=${Note?.category}`, {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: { \"Content-Type\": \"application/json\" },\n        });\n  \n        if (response.status == \"400\") {\n          throw new Error(`0:Something Went Wrong ${response.message}`);\n        }\n        const json = await response.json();\n        return json;\n      } catch (err) {\n    return   { messsage:'0:'+err.message}\n    }\n}\n\n  module.exports = { SaveNotes,FetchCategory,FetchNotesByCategory,FetchAllNotes,RemoveNote }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}